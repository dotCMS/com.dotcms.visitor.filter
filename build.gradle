plugins {
    id 'biz.aQute.bnd.builder' version '3.3.0'
}

sourceCompatibility = '1.8'
version = '0.1'

repositories {
    mavenCentral()
    maven { url "http://repo.dotcms.com/artifactory/libs-release" }
    maven { url "http://repo.dotcms.com/artifactory/libs-snapshot-local" }
}
import java.util.jar.*
configurations {
    pluginLibs
    osgiLibs
}

dependencies {
    compile ('com.dotcms:dotcms:4.3.2') { transitive = true }
    compile 'org.osgi:org.osgi.annotation:6.0.0'
    compile 'org.tinylog:tinylog:1.3.4'
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile 'org.apache.tomcat:tomcat-catalina:8.5.24'
    compile 'commons-codec:commons-codec:1.11'
    compile 'com.maxmind.geoip2:geoip2:2.11.0'
    pluginLibs 'com.fasterxml.jackson.core:jackson-core:2.9.3'
    pluginLibs 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
    pluginLibs 'org.tinylog:tinylog:1.3.4'
    pluginLibs 'com.google.guava:guava:r05'
    pluginLibs 'commons-codec:commons-codec:1.11'
    pluginLibs 'com.maxmind.geoip2:geoip2:2.11.0'
}


ext {
    bundleName = "dotCMS Override fragment"
    bundleDescription = "dotCMS - Override fragment"
    fragmentHost = "system.bundle; extension:=framework"
    bundleSymbolicName = "" //Auto generated based on the plugin jar
    bundleVersion = "" //Auto generated based on the plugin jar
    importPackage = "" //Auto generated based on the plugin jar
    bundleManifestVersion = "" //Auto generated based on the plugin jar
    bundleDocURL = "" //Auto generated based on the plugin jar
    bundleVendor = "" //Auto generated based on the plugin jar
    
}

/**
 * Reads the Manifest file of the just created plugin jar in order to get the required info
 * to automatically create the fragment jar.
 */
task readManifesttAttributes {
    doFirst {
        File file = configurations.baseline.singleFile
        JarFile jar = new JarFile(file)
        Attributes manifest = jar.getManifest().getMainAttributes()
        bundleSymbolicName = "${manifest.getValue('Bundle-SymbolicName')}"
        bundleVersion = "${manifest.getValue('Bundle-Version')}"
        importPackage = "${manifest.getValue('Import-Package')}"
        bundleManifestVersion = "${manifest.getValue('Bundle-ManifestVersion')}"
        bundleDocURL = "${manifest.getValue('Bundle-DocURL')}"
        bundleVendor = "${manifest.getValue('Bundle-Vendor')}"
    }
}


task fragmentJar(type: Jar) {

    doFirst {
        //Setting the fragment jar name
        baseName = project.name
        archiveName = "${baseName}.fragment-${version}.jar"

        manifest {
            attributes (
                    'Bundle-Name': "${bundleName}",
                    'Bundle-Description': "${bundleDescription}",
                    'Bundle-Vendor': "${bundleVendor}",
                    'Bundle-Version': "${version}",
                    'Bundle-SymbolicName': "${baseName}.fragment",
                    'Bundle-ManifestVersion': "${bundleManifestVersion}",
                    'Bundle-DocURL': "${bundleDocURL}",
                    'Fragment-Host': "${fragmentHost}",
                    'Export-Package': "org.apache.tomcat.Container,com.dotcms.util,com.dotcms.repackage.org.apache.commons.net.util,org.apache.tomcat.util.descriptor.web,javax.servlet,javax.servlet.annotation,javax.servlet.http,org.apache.catalina,org.apache.catalina.core,org.apache.tomcat.util.descriptor.web"
            )
        }
    }
}
fragmentJar.dependsOn 'readManifesttAttributes'


jar {
	manifest {
	    attributes (
			'Bundle-Activator': 'com.dotcms.osgi.Activator',
			'DynamicImport-Package' : '*',
			'Import-Package': '''
					javax.servlet.*,
					org.osgi.service.http.context,
					org.osgi.*,
					com.dotmarketing.util.*,
					com.dotmarketing.osgi.*,
					com.dotmarketing.filters.*,
					com.dotcms.repackage.com.maxmind.geoip2.*,
					org.apache.catalina.*,
					com.dotcms.util.*,
					java.net.*,
					org.apache.tomcat.util.descriptor.web,
					javax.servlet.*,
					org.apache.tomcat.Container,
					com.maxmind.geoip2.*
					
    

				''',
			'Bundle-ClassPath' :'''
                    .,
                    libs/jackson-core-2.9.3.jar,
                    libs/jackson-databind-2.9.3.jar,
                    libs/jackson-annotations-2.9.3.jar,
                    libs/commons-codec-1.11.jar,
                    libs/tinylog-1.3.4.jar,
                    libs/geoip2-2.11.0.jar,
                    libs/maxmind-db-1.2.2.jar,
                    libs/guava-r05.jar
                ''',
			'Export-Package': '''
				org.osgi.service.http.context,
				org.pmw.*,
				com.google.common.base.*

			'''
		)
	}
}

jar.finalizedBy 'fragmentJar'

task copyToLib(type: Copy) {
    into "src/main/resources/libs"
    from configurations.pluginLibs
}

//jar.dependsOn fragment
jar.dependsOn copyToLib

tasks.copyToLib.execute()

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.2'
}
